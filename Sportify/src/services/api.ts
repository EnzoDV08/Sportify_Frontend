const API_URL = "http://localhost:5000";

export interface UserData {
  name: string;
  email: string;
  password: string;
}

export interface CompanyData extends UserData {
  description: string;
  website: string;
}

export interface UserAchievement {
  title: string;
  description: string;
  isAutoGenerated: boolean;
}


export const getUsers = async () => {
  const res = await fetch(`${API_URL}/api/users`);
  return await res.json();
};

export const createUser = async (userData: UserData) => {
  const res = await fetch(`${API_URL}/api/users`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(userData),
  });

  if (!res.ok) throw new Error('Failed to create user');
  return res.json();
};

export const loginUser = async (email: string, password: string) => {
  const res = await fetch(`${API_URL}/api/users/login`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ email, password }),
  });

  if (!res.ok) throw new Error('Invalid credentials');
  return res.json();
};


export const createCompany = async (data: CompanyData) => {
  const res = await fetch(`${API_URL}/api/company`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(data),
  });

  if (!res.ok) throw new Error('Failed to register company');
  return res.json();
};


export const fetchUserAchievements = async (
  userId: number
): Promise<UserAchievement[]> => {
  const res = await fetch(`${API_URL}/api/Achievements/user/${userId}`);
  if (!res.ok) throw new Error('Failed to fetch achievements');
  return res.json();
};

export const createAchievement = async (data: {
  title: string;
  description: string;
  isAutoGenerated: boolean;
}) => {
  const res = await fetch(`${API_URL}/api/Achievements`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(data),
  });

  return res.ok;
};

export const assignAchievement = async (data: {
  userId: string;
  achievementId: string;
  eventId?: string;
  awardedByAdminId?: string;
}): Promise<boolean> => {
  const res = await fetch(`${API_URL}/api/Achievements/assign`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify(data),
  });

  return res.ok;
};

export const fetchAllAchievements = async (): Promise<any[]> => {
  const res = await fetch(`${API_URL}/api/Achievements`);
  if (!res.ok) throw new Error('Failed to fetch all achievements');
  return res.json();
};
