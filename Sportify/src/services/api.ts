import { Event } from '../models/event';

// Get all events
export const fetchEvents = async (): Promise<Event[]> => {
  const response = await fetch('http://localhost:5000/api/events');
  if (!response.ok) throw new Error('Failed to fetch events');
  return await response.json();
};

// Get one event by ID
export const fetchSingleEvent = async (id: number): Promise<Event> => {
  const response = await fetch(`http://localhost:5000/api/events/${id}`);
  if (!response.ok) throw new Error('Failed to fetch event');
  return await response.json();
};

export interface UserAchievement {
  title: string
  description: string
  isAutoGenerated: boolean
}

//Get all achievements assigned to a specific user
export const fetchUserAchievements = async (userId: number): Promise<UserAchievement[]> => {
  const res = await fetch(`http://localhost:5000/api/Achievements/user/${userId}`)
  if (!res.ok) throw new Error("Failed to fetch achievements")
  return res.json()
}

//Create a new achievement
export const createAchievement = async (data: {
  title: string
  description: string
  isAutoGenerated: boolean
}): Promise<boolean> => {
  const res = await fetch('http://localhost:5000/api/Achievements', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(data),
  })

  return res.ok
}

//Assign an achievement to a user
export const assignAchievement = async (data: {
  userId: string
  achievementId: string
  eventId?: string
  awardedByAdminId?: string
}): Promise<boolean> => {
  const res = await fetch('http://localhost:5000/api/Achievements/assign', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(data),
  })

  return res.ok
}

//Fetch all achievements
export const fetchAllAchievements = async (): Promise<any[]> => {
  const res = await fetch('http://localhost:5000/api/Achievements')
  if (!res.ok) throw new Error('Failed to fetch all achievements')
  return await res.json()
}
